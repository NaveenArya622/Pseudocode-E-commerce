FUNCTION SetupServer():
    server ← NEW_SERVER()



     // Define routes with types
    routes ← [
        ApiRoute(
            method = "GET",
            path = "v1/cart/{user_id}",
            handler = handler.CartInformation,
            middlewares = [Middleware.AuthenticateUser],
            responseSchema = {
                cartId: STRING,
                items: {
                    userId: STRING,
                    itemId: STRING,
                }[]
            }
        ),
        ApiRoute(
            method = "GET",
            path = "v1/cart/{user_id}/items",
            handler = handler.GetItems,
            middlewares = [Middleware.AuthenticateUser],
            responseSchema = { 
                cartId: STRING,
                items: ITEM[]
            }
        ),
        ApiRoute(
            method = "GET",
            path = "v1/cart/{user_id}/items/{item_id}",
            handler = handler.GetItem,
            middlewares = [Middleware.AuthenticateUser],
            responseSchema = { 
                cartId: STRING,
                item: ITEM
            }
        ),
        ApiRoute(
            method = "DELETE",
            path = "v1/cart/{user_id}/items/{item_id}",
            handler = handler.DeleteItem,
            middlewares = [Middleware.AuthenticateUser],
            responseSchema = { 
                cartId: STRING,
                itemId: STRING,
                message: STRING
            }
        ),
        ApiRoute(
            method = "POST",
            path = "v1/cart/{user_id}/checkout",
            handler = handler.CheckoutItems,
            middlewares = [Middleware.AuthenticateUser],
            responseSchema = { 
                cartId: STRING,
                message: STRING
            }
        )
    ]

    // Register all routes
    FOR EACH route IN routes:
        server.ADD_ROUTE(route.method, route.path, route.middlewares, route.handler)

    RETURN server
