FUNCTION SetupServer():
    server ← NEW_SERVER()



     // Define routes with types
    routes ← [
        ApiRoute(
            method = "POST",
            path = "api/UMM/user/register",
            handler = Handler.Register,
            middlewares = [],
            requestSchema = {
                username: STRING,
                email: STRING,
                gender: "Male"|"Female",
                password: STRING
            },
            responseSchema = {
                userId: STRING,
                message: STRING,
                token: STRING,
                expiresIn: INTEGER
            }
        ),
        ApiRoute(
            method = "POST",
            path = "api/UMM/user/login",
            handler = Handler.Login,
            middlewares = [],
            requestSchema = {
                email: STRING,
                password: STRING
            },
            responseSchema = {
                userId: STRING,
                message: STRING,
                token: STRING,
                expiresIn: INTEGER
            }
        ),
        ApiRoute(
            method = "GET",
            path = "api/UMM/user/profile",
            handler = handler.Profile,
            middlewares = [Middleware.AuthenticateUser],
            responseSchema = {
                userId: STRING,
                username: STRING,
                gender: "Male"|"Female",
                email: STRING
            }
        ),
        ApiRoute(
            method = "PUT",
            path = "api/UMM/user/{user_id}",
            handler = handler.UpdateProfile,
            middlewares = [Middleware.AuthenticateUser],
            requestSchema = {
                username: STRING,
                gender: "Male"|"Female",
                email: STRING
            },
            responseSchema = {
                userId: STRING,
                message: STRING
            }
        )
        ApiRoute(
            method = "POST",
            path = "api/UMM/user/logout",
            handler = handler.LogoutUser,
            middlewares = [Middleware.AuthenticateUser],
            responseSchema = {
                userId: STRING,
                message: STRING
            }
        )
    ]

    // Register all routes
    FOR EACH route IN routes:
        server.ADD_ROUTE(route.method, route.path, route.middlewares, route.handler)

    RETURN server
